buildscript {
    repositories {
        maven { url "https://files.minecraftforge.net/maven" }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:3.+"
    }
}

apply plugin: "net.minecraftforge.gradle"

version = "2.0.0"
group = "fr.lnzl.lbe"
archivesBaseName = "LootingBowEnchantment"

dependencies {
    minecraft "net.minecraftforge:forge:1.15.2-31.2.37"
}

minecraft {
    mappings channel: "snapshot", version: "20200514-1.15.1"

    runs {
        client {
            workingDirectory project.file("run")
            property "forge.logging.markers", "SCAN,REGISTRIES,REGISTRYDUMP"
            property "forge.logging.console.level", "debug"

            mods {
                lootingbowenchantment {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file("run")
            property "forge.logging.markers", "SCAN,REGISTRIES,REGISTRYDUMP"
            property "forge.logging.console.level", "debug"

            mods {
                lootingbowenchantment {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file("run")
            property "forge.logging.markers", "SCAN,REGISTRIES,REGISTRYDUMP"
            property "forge.logging.console.level", "debug"

            args "--mod", "lootingbowenchantment", "--all", "--output", file("src/generated/resources/")

            mods {
                lootingbowenchantment {
                    source sourceSets.main
                }
            }
        }
    }
}

import net.minecraftforge.gradle.common.task.SignJar
task signJar(type: SignJar, dependsOn: jar) {
    onlyIf {
        project.hasProperty('keyStore')
    }

    keyStore = project.findProperty('keyStore')
    alias = project.findProperty('keyStoreAlias')
    storePass = project.findProperty('keyStorePass')
    keyPass = project.findProperty('keyStoreKeyPass')
    inputFile = jar.archivePath
    outputFile = jar.archivePath
}

build.dependsOn signJar
